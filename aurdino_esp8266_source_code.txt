#include "ThingSpeak.h"
#include <ESP8266WiFi.h>

#define Voltagesensor  A0
#define Currentsensor D0
int Buzzer = D1;


 
char ssid[] = "Gokulkavi";   // your network SSID (name)
char pass[] = "1234567890";   // your network password
int keyIndex = 0;            // your network key Index number (needed only for WEP)
WiFiClient  client;
 
unsigned long myChannelNumber = 2708540;
const char * myWriteAPIKey = "SI64LULLB8D8H1HN";

 
void setup()
{
  Serial.begin(9600);  // Initialize serial
  pinMode(Buzzer,OUTPUT);
  WiFi.mode(WIFI_STA);
  ThingSpeak.begin(client);  // Initialize ThingSpeak
  // Connect or reconnect to WiFi
  if (WiFi.status() != WL_CONNECTED)
  {
    Serial.print("Attempting to connect to SSID: ");
    Serial.println(ssid);
    while (WiFi.status() != WL_CONNECTED)
    {
      WiFi.begin(ssid, pass);  
      Serial.print(".");
      delay(5000);
    }
    Serial.println("\nConnected.");
  }
}
 
void loop()
{

  int Voltagesensor = analogRead(A0);
  int Currentsensor = analogRead(D0);
  
  
  Serial.print("Voltage Sensor : ");
  Serial.println(Voltagesensor);
 
  Serial.print("Current Sensor : ");
  Serial.print(Currentsensor); 
  Serial.println("");
  delay(2000); 
 
    if (Voltagesensor < 10)
    {
      digitalWrite(D1,HIGH);
    }
    else
    {
     digitalWrite(D1,LOW); 
    }
Serial.print("Voltagesensor :");
Serial.println(Voltagesensor);
Serial.print("Currentsensor:");
Serial.println(Currentsensor);
delay(2000); 

 ThingSpeak.setField(1, Voltagesensor);
 ThingSpeak.setField(2, Currentsensor);
 
 
 
 
    
 
    // write to the ThingSpeak channel
    int x = ThingSpeak.writeFields(myChannelNumber, myWriteAPIKey );
    if (x == 200)
    {
      Serial.println("Channel update successful.");
    }
    else
    {
      Serial.println("Problem updating channel. HTTP error code " + String(x));
    }
 
    delay(1000); // Wait 20 seconds to update the channel again
  }
